apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: systems.starlingx.windriver.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.systemMode
    description: The configured system mode.
    name: mode
    type: string
  - JSONPath: .status.systemType
    description: The configured system type.
    name: type
    type: string
  - JSONPath: .status.softwareVersion
    description: The current software version
    name: version
    type: string
  - JSONPath: .status.inSync
    description: The current synchronization state.
    name: insync
    type: boolean
  - JSONPath: .status.reconciled
    description: The current reconciliation state.
    name: reconciled
    type: boolean
  group: starlingx.windriver.com
  names:
    kind: System
    plural: systems
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            certificates:
              description: Certificates is a list of references to certificates that
                must be installed.
              items:
                properties:
                  secret:
                    description: Secret is the name of a TLS secret containing the
                      public certificate and private key.  The secret must be of type
                      kubernetes.io/tls and must contain specific data attributes.  Specifically,
                      all secrets must, at a minimum contain the "tls.crt" key since
                      all certificates will at least require public certificate PEM
                      data.  The remaining two keys "tls.key" and "ca.crt" are optional
                      depending on the certificate type. For the "platform", "openstack",
                      "tpm", and "docker" certificate types both the "tls.crt" and
                      "tls.key" certificates are needed while for the "*_ca" version
                      of those same certificate types only the "tls.crt" attribute
                      is required.  The "ca.crt" attribute is only required for the
                      "platform" or "tpm" certificate types, and only if the supplied
                      public certificate is signed by a non-standard root CA.
                    type: string
                  type:
                    description: Type represents the intended usage of the certificate
                    enum:
                    - ssl
                    - ssl_ca
                    - openstack
                    - openstack_ca
                    - docker_registry
                    - tpm_mode
                    type: string
                required:
                - type
                - secret
                type: object
              type: array
            contact:
              description: Contact is a method to reach the person responsible for
                the system.  For example it could be an email address, phone number,
                or physical address.
              maxLength: 255
              pattern: ^[a-zA-Z0-9@\-_\. ]+$
              type: string
            description:
              description: Description is a free form string describing the intended
                purpose of the system.
              type: string
            dnsServers:
              description: Nameservers is an array of Domain SystemName servers.  Each
                server can be specified as either an IPv4 or IPv6 address.
              items:
                type: string
              type: array
            license:
              description: License is a reference to a license file that must be installed.
              properties:
                secret:
                  description: Secret is the name of a TLS secret containing the license
                    file contents. It must refer to a Opaque Kubernetes Secret.
                  type: string
              required:
              - secret
              type: object
            location:
              description: Location is a short description of the system's physical
                location.
              maxLength: 255
              pattern: ^[a-zA-Z0-9\-_\. ]+$
              type: string
            ntpServers:
              description: NTPServers is an array of Network Time Protocol servers.  Each
                server can be specified as either an IPv4 or IPv6 address, or a FQDN
                hostname.
              items:
                type: string
              type: array
            ptp:
              description: PTP defines the Precision Time Protocol configuration for
                the system.
              properties:
                mechanism:
                  description: Mechanism defines the high level messaging architecture
                    used to implement the precision time procotol.
                  enum:
                  - p2p
                  - e2e
                  type: string
                mode:
                  description: Mode defines the precision time protocol mode of the
                    system.
                  enum:
                  - hardware
                  - software
                  - legacy
                  type: string
                transport:
                  description: Transport defines the network transport protocol used
                    to implement the precision time protocol.
                  enum:
                  - l2
                  - udp
                  type: string
              type: object
            serviceParameters:
              description: ServiceParameters is a list of service parameters
              items:
                properties:
                  paramname:
                    description: ParamName identifies the name for this service parameter
                    maxLength: 255
                    type: string
                  paramvalue:
                    description: ParamValue identifies the value for this service
                      parameter
                    maxLength: 4096
                    type: string
                  personality:
                    description: Personality identifies the personality for this service
                      parameter
                    maxLength: 255
                    type: string
                  resource:
                    description: Resource identifies the resource for this service
                      parameter
                    maxLength: 255
                    type: string
                  section:
                    description: Section identifies the section for this service parameter
                    maxLength: 128
                    pattern: ^[a-zA-Z0-9\-_]+$
                    type: string
                  service:
                    description: Service identifies the service for this service parameter
                    maxLength: 16
                    pattern: ^[a-zA-Z0-9\-_]+$
                    type: string
                required:
                - service
                - section
                - paramname
                - paramvalue
                type: object
              type: array
            storage:
              description: Storage is a set of storage specific attributes to be configured
                for the system.
              properties:
                backends:
                  description: Backends is a set of backend storage methods to be
                    configured.  Only
                  items:
                    properties:
                      name:
                        description: SystemName uniquely identifies the storage backend
                          instance.
                        maxLength: 255
                        pattern: ^[a-zA-Z0-9\-_]+$
                        type: string
                      partitionSize:
                        description: PartitionSize is the controller disk partition
                          size to be allocated for the Ceph monitor - in gigabytes.
                          This attribute is only applicable for Ceph storage backends.
                        format: int64
                        minimum: 20
                        type: integer
                      replicationFactor:
                        description: ReplicationFactor is the number of storage hosts
                          required in each replication group for storage redundancy.
                          This attribute is only applicable for Ceph storage backends.
                        format: int64
                        maximum: 3
                        minimum: 1
                        type: integer
                      services:
                        description: Services is a list of services to enable for
                          this backend instance.  Each backend type supports a limited
                          set of services.  Refer to customer documentation for more
                          information.
                        items:
                          enum:
                          - cinder
                          - glance
                          - nova
                          - swift
                          - rbd-provisioner
                          type: string
                        type: array
                      type:
                        description: Type specifies the storage backend type.
                        enum:
                        - file
                        - lvm
                        - ceph
                        type: string
                    required:
                    - name
                    - type
                    type: object
                  type: array
                drbd:
                  description: DRBD defines the set of DRBD configuration attributes
                    for the system.
                  properties:
                    linkUtilization:
                      description: LinkUtilization defines the maximum link utilisation
                        percentage during sync activities.
                      format: int64
                      maximum: 100
                      minimum: 20
                      type: integer
                  required:
                  - linkUtilization
                  type: object
                filesystems:
                  description: Filesystems defines the set of controller file system
                    definitions.
                  items:
                    properties:
                      name:
                        description: Name defines the system defined name of the filesystem
                          resource.
                        type: string
                      size:
                        format: int64
                        minimum: 1
                        type: integer
                    required:
                    - name
                    - size
                    type: object
                  type: array
              type: object
            vswitchType:
              description: VSwitchType is the desired vswitch implementation to be
                configured. This is intentionally left unvalidated to avoid issues
                with proprietary vswitch implementation.
              type: string
          type: object
        status:
          properties:
            defaults:
              description: Defaults defines the configuration attributed collected
                before applying any user configuration values.
              type: string
            id:
              description: ID defines the unique identifier assigned by the system.
              type: string
            inSync:
              description: Defines whether the resource has been provisioned on the
                target system.
              type: boolean
            reconciled:
              description: Reconciled defines whether the System has been successfully
                reconciled at least once.  If further changes are made they will be
                ignored by the reconciler.
              type: boolean
            softwareVersion:
              description: SoftwareVersion defines the current software version reported
                by the system API.
              type: string
            systemMode:
              description: SystemMode defines the current system mode reported by
                the system API.
              type: string
            systemType:
              description: SystemType defines the current system type reported by
                the system API.
              type: string
          required:
          - id
          - systemType
          - systemMode
          - softwareVersion
          - inSync
          - reconciled
          type: object
  version: v1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
