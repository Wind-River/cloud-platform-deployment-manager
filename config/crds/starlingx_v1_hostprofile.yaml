apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: hostprofiles.starlingx.windriver.com
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.base
    description: The parent host profile.
    name: base
    type: string
  group: starlingx.windriver.com
  names:
    kind: HostProfile
    plural: hostprofiles
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            addresses:
              description: Addresses defines the list of addresses to be configured
                against this host.  Addresses are specific to a single host therefore
                they should only be specified if this profile is only going to be
                used to configure a single host.
              items:
                properties:
                  address:
                    description: Address defines the IPv4 or IPv6 address value.
                    type: string
                  interface:
                    description: Interface is a reference to the interface name against
                      which to configure the address.
                    maxLength: 255
                    pattern: ^[a-zA-Z0-9\-_\.]+$
                    type: string
                  prefix:
                    description: Prefix defines the IP address network prefix length.
                    format: int64
                    maximum: 128
                    minimum: 1
                    type: integer
                required:
                - interface
                - address
                - prefix
                type: object
              type: array
            administrativeState:
              description: AdministrativeState defines the desired administrative
                state of the host
              enum:
              - locked
              - unlocked
              type: string
            base:
              description: 'Base defines the name of another HostProfile from which
                to inherit attributes.  HostProfiles can be structured in a hierarchy
                so that many HostProfiles can inherit generic attributes from a parent
                HostProfile. This hierarchy can be defined in multiple layers; with
                lower layers overriding attributes set in higher layers.  At configuration
                time, before a Host is configured, the hierarchy of HostProfile resources
                is flattened to produce a single composite profile that represents
                the final attributes as they are overridden down the HostProfile hierarchy.  Once
                the HostProfile hierarchy is flattened to a composite profile.  The
                Deployment Manager will further refine the profile to create a final
                HostProfile which serves as the final configuration for the Host resource.  To
                create the final HostProfile, the Deployment Manages merges the composite
                profile with the initial default host attributes, and then merges
                the individual host overrides into that result.  The process can be
                illustrated as follows:          Host Defaults      +---------------------+            |                                      \            |                                       \         Base
                Profile        +                       \            |                 \                       \           ...                  +
                Composite Profile ----+  Final Profile            |                 /                        /      Personality
                Profile(s) +                        /            |                                        /            |                                       /           Host                                    /            |                                     /            |                                    /         Host
                Overrides       +-----------------+  Merging two HostProfileSpec resources
                consists of merging the attributes of a higher precedence profile
                into the attributes of a lower precedences profile.  The rules for
                merging attributes are as follows.    1) A nil pointer is always overwritten
                by a non-nil pointer.    2) Two non-nil pointers are merged together
                according to the underlying      type.    2a) If the type pointed
                to is a primitive type (e.g., int, bool,       string, etc) then the
                higher precedence value is used).    2b) If the type pointed to is
                a structure then this same merge       procedure is repeated recursively
                on each field of the structure       with these same rules applying
                to each field.    2c) If the type pointed to is a slice/array then
                rule (3) is used.    2d) If the type pointed to is a map then higher
                precedence value is       used and the entire map is overwritten.    3)
                Two slices are merged together using the following sub-rules.    3a)
                If the elements of slices define the KeyEqual() method then an       attempt
                is made to try to merge equivalent element using this same       merge
                strategy.  Elements from the higher precedence list that do       not
                have an equivalent in the lower precedence list are appended to       the
                list.  Elements appearing in the lower precedence list but not       in
                the higher precedence list are kept intact.    3b) If the elements
                of the slices do not define the KeyEqual() method       then they
                are simply concatenated together.    3c) An empty slice is handled
                as a special case that deletes the       contents of the lower precedence
                slice.  Do not confuse an empty       slice with a nil slice pointer.'
              type: string
            boardManagement:
              description: BoardManagement defines the attributes specific to the
                board management controller configuration.
              properties:
                address:
                  description: Address defines the IP address or hostname of the board
                    management interface.  An address is specific to a host therefore
                    this should only be set if the profile is only going to be used
                    to configure a single host; otherwise it should be set as a per-host
                    override.
                  type: string
                credentials:
                  description: Credentials defines the authentication credentials
                    for the board management interface.  This is left as optional
                    so that the address can be overridden on a per-host basis without
                    worrying about overwriting the type or credentials.
                  properties:
                    password:
                      description: Password defines the attributes specific to password
                        based authentication.
                      properties:
                        secret:
                          description: Secret defines the name of the secret which
                            contains the username and password for the board management
                            controller.
                          type: string
                      required:
                      - secret
                      type: object
                  type: object
                type:
                  description: Type defines the board management controller type.  This
                    is left as optional so that the address can be overridden on a
                    per-host basis without worrying about overwriting the type or
                    credentials.
                  enum:
                  - none
                  - bmc
                  - dynamic
                  - ipmi
                  - redfish
                  type: string
              type: object
            bootDevice:
              description: BootDevice defines the absolute device path of the device
                to be used for installation.
              maxLength: 4095
              pattern: ^/dev/.+$
              type: string
            bootMAC:
              description: BootMAC defines the MAC address that a host uses to perform
                the initial software installation.  This is only applicable for statically
                provisioned hosts and should be set on each hosts via the overrides
                attributes.
              pattern: ^([0-9a-fA-Z]{2}[:-]){5}([0-9a-fA-Z]{2})$
              type: string
            clockSynchronization:
              description: ClockSynchronization defines the clock synchronization
                source of the host resource.
              enum:
              - ntp
              - ptp
              type: string
            console:
              description: Console defines the installation output device.
              pattern: ^(|tty[0-9]+|ttyS[0-9]+(,\d+([a-zA-Z0-9]+)?)?|ttyUSB[0-9]+(,\d+([a-zA-Z0-9]+))?|lp[0-9]+)$
              type: string
            installOutput:
              description: InstallOutput defines the install output method.  The graphical
                mode is only suitable when the console attribute is set to a graphical
                terminal. The text mode can be used with both serial and graphical
                console configurations.
              enum:
              - text
              - graphical
              type: string
            interfaces:
              description: Interfaces defines the list of interfaces to be configured
                against this host.
              properties:
                bond:
                  description: Bond defines the list of Bond interfaces to be configured
                    on a host.
                  items:
                    properties:
                      class:
                        description: Class defines the intended usage of this interface
                          by the system.
                        enum:
                        - platform
                        - data
                        - pci-sriov
                        - pci-passthrough
                        - none
                        type: string
                      dataNetworks:
                        description: DataNetworks defines the list of data networks
                          to be configured against this interface.
                        items:
                          maxLength: 255
                          pattern: ^[a-zA-Z0-9\-_]+$
                          type: string
                        maxLength: 255
                        pattern: ^[a-zA-Z0-9\-_]+$
                        type: array
                      members:
                        description: Members defines the list of interfaces which,
                          together, make up the Bond interface.
                        items:
                          maxLength: 255
                          pattern: ^[a-zA-Z0-9\-_\.]+$
                          type: string
                        maxLength: 255
                        pattern: ^[a-zA-Z0-9\-_\.]+$
                        type: array
                      mode:
                        description: Mode defines the Bond interface aggregation mode.
                        enum:
                        - balanced
                        - active_standby
                        - 802.3ad
                        type: string
                      mtu:
                        description: MTU defines the maximum transmit unit for this
                          interface.
                        format: int64
                        maximum: 9216
                        minimum: 576
                        type: integer
                      name:
                        description: SystemName defines the name of the interface
                          to be configured.
                        maxLength: 255
                        pattern: ^[a-zA-Z0-9\-_\.]+$
                        type: string
                      platformNetworks:
                        description: PlatformNetworks defines the list of platform
                          networks to be configured against this interface.
                        items:
                          maxLength: 255
                          pattern: ^[a-zA-Z0-9\-_]+$
                          type: string
                        maxLength: 255
                        pattern: ^[a-zA-Z0-9\-_]+$
                        type: array
                      ptpRole:
                        description: PTPRole defines the ptp role as master, slave,
                          or none
                        enum:
                        - master
                        - slave
                        - none
                        type: string
                      transmitHashPolicy:
                        description: TransmitHashPolicy defines the transmit interface
                          selection policy for the Bond interface.  Only applicable
                          for 802.3ad and balanced modes.
                        enum:
                        - layer2
                        - layer2+3
                        type: string
                    required:
                    - name
                    - class
                    - members
                    - mode
                    type: object
                  type: array
                ethernet:
                  description: Ethernet defines the list of ethernet interfaces to
                    be configured on a host.
                  items:
                    properties:
                      class:
                        description: Class defines the intended usage of this interface
                          by the system.
                        enum:
                        - platform
                        - data
                        - pci-sriov
                        - pci-passthrough
                        - none
                        type: string
                      dataNetworks:
                        description: DataNetworks defines the list of data networks
                          to be configured against this interface.
                        items:
                          maxLength: 255
                          pattern: ^[a-zA-Z0-9\-_]+$
                          type: string
                        maxLength: 255
                        pattern: ^[a-zA-Z0-9\-_]+$
                        type: array
                      mtu:
                        description: MTU defines the maximum transmit unit for this
                          interface.
                        format: int64
                        maximum: 9216
                        minimum: 576
                        type: integer
                      name:
                        description: SystemName defines the name of the interface
                          to be configured.
                        maxLength: 255
                        pattern: ^[a-zA-Z0-9\-_\.]+$
                        type: string
                      platformNetworks:
                        description: PlatformNetworks defines the list of platform
                          networks to be configured against this interface.
                        items:
                          maxLength: 255
                          pattern: ^[a-zA-Z0-9\-_]+$
                          type: string
                        maxLength: 255
                        pattern: ^[a-zA-Z0-9\-_]+$
                        type: array
                      port:
                        description: Port defines the attributes identifying the underlying
                          port which defines this Ethernet interface.
                        properties:
                          name:
                            description: SystemName defines the device name of the
                              Ethernet port.
                            maxLength: 255
                            pattern: ^[a-zA-Z0-9\-_]+$
                            type: string
                        required:
                        - name
                        type: object
                      ptpRole:
                        description: PTPRole defines the ptp role as master, slave,
                          or none
                        enum:
                        - master
                        - slave
                        - none
                        type: string
                      vfCount:
                        description: VFCount defines the number of SRIOV VF interfaces
                          to be allocated.  Only applicable if the interface class
                          is set to "pci-sriov".
                        format: int64
                        maximum: 128
                        minimum: 1
                        type: integer
                      vfDriver:
                        description: VFDriver defines the device driver to be associated
                          with each individual SRIOV VF interface allocated.  Only
                          applicable if the interface class is set to "pci-sriov".
                        type: string
                    required:
                    - name
                    - class
                    - port
                    type: object
                  type: array
                vlan:
                  description: VLAN defines the list of VLAN interfaces to be configured
                    on a host.
                  items:
                    properties:
                      class:
                        description: Class defines the intended usage of this interface
                          by the system.
                        enum:
                        - platform
                        - data
                        - pci-sriov
                        - pci-passthrough
                        - none
                        type: string
                      dataNetworks:
                        description: DataNetworks defines the list of data networks
                          to be configured against this interface.
                        items:
                          maxLength: 255
                          pattern: ^[a-zA-Z0-9\-_]+$
                          type: string
                        maxLength: 255
                        pattern: ^[a-zA-Z0-9\-_]+$
                        type: array
                      lower:
                        description: Lower defines the interface name over which this
                          VLAN interface is to be configured.
                        pattern: ^[a-zA-Z0-9\-_\.]+$
                        type: string
                      mtu:
                        description: MTU defines the maximum transmit unit for this
                          interface.
                        format: int64
                        maximum: 9216
                        minimum: 576
                        type: integer
                      name:
                        description: SystemName defines the name of the interface
                          to be configured.
                        maxLength: 255
                        pattern: ^[a-zA-Z0-9\-_\.]+$
                        type: string
                      platformNetworks:
                        description: PlatformNetworks defines the list of platform
                          networks to be configured against this interface.
                        items:
                          maxLength: 255
                          pattern: ^[a-zA-Z0-9\-_]+$
                          type: string
                        maxLength: 255
                        pattern: ^[a-zA-Z0-9\-_]+$
                        type: array
                      ptpRole:
                        description: PTPRole defines the ptp role as master, slave,
                          or none
                        enum:
                        - master
                        - slave
                        - none
                        type: string
                      vid:
                        description: VID defines the VLAN ID value to be assigned
                          to this VLAN interface.
                        format: int64
                        maximum: 4095
                        minimum: 1
                        type: integer
                    required:
                    - name
                    - class
                    - lower
                    - vid
                    type: object
                  type: array
              type: object
            labels:
              description: Labels defines the set of labels to be applied to the kubernetes
                node resources that is running on this host.
              type: object
            location:
              description: Location defines the physical location of the host in the
                data centre.
              type: string
            memory:
              description: Memory defines the memory allocations for each function
                across all NUMA sockets/nodes.
              items:
                properties:
                  functions:
                    description: Functions defines a list of function specific allocations
                      for the given NUMA socket/node.
                    items:
                      properties:
                        function:
                          description: Function defines the function for which to
                            allocate a number of cores.
                          enum:
                          - platform
                          - vm
                          - vswitch
                          type: string
                        pageCount:
                          description: PageCount defines the number of pages to allocate
                            to a specific function.
                          format: int64
                          type: integer
                        pageSize:
                          description: PageSize defines the size of individual memory
                            pages to be allocated to a specific function.  For platform
                            allocations the 4KB page size is the only valid choice.
                          enum:
                          - 4KB
                          - 2MB
                          - 1GB
                          type: string
                      required:
                      - function
                      - pageSize
                      - pageCount
                      type: object
                    type: array
                  node:
                    description: Node defines the NUMA node number for which to allocate
                      a number of functions.
                    format: int64
                    maximum: 7
                    minimum: 0
                    type: integer
                required:
                - node
                - functions
                type: object
              type: array
            personality:
              description: Personality defines the role to be assigned to the host
              enum:
              - controller
              - worker
              - storage
              - controller-worker
              type: string
            powerOn:
              description: PowerOn defines the initial power state of the node if
                static provisioning is being used.
              type: boolean
            processors:
              description: Processors defines the core allocations for each function
                across all NUMA sockets/nodes.
              items:
                properties:
                  functions:
                    description: Functions defines a list of function specific allocations
                      for the given NUMA socket/node.
                    items:
                      properties:
                        count:
                          description: Count defines the number of cores to allocate
                            to a specific function.
                          format: int64
                          maximum: 64
                          minimum: 0
                          type: integer
                        function:
                          description: Function defines the function for which to
                            allocate a number of cores.
                          enum:
                          - platform
                          - shared
                          - vswitch
                          - application-isolated
                          - application
                          type: string
                      required:
                      - function
                      - count
                      type: object
                    type: array
                  node:
                    description: Node defines the NUMA node number for which to allocate
                      a number of functions.
                    format: int64
                    maximum: 7
                    minimum: 0
                    type: integer
                required:
                - node
                - functions
                type: object
              type: array
            provisioningMode:
              description: ProvisioningMode defines whether a host is provisioned
                dynamically when it appears in system host inventory or whether it
                is provisioned statically and powered up explicitly.  Statically provisioned
                hosts require that the user supply a boot MAC address, board management
                IP address, and a management IP address if the management network
                is configured for static address assignment.
              enum:
              - static
              - dynamic
              type: string
            rootDevice:
              description: RootDevice defines the absolute device path of the device
                to be used as the root file system.
              maxLength: 4095
              pattern: ^/dev/.+$
              type: string
            routes:
              description: Routes defines the list of routes to be configured against
                this host. Routes require that the target interface be configured
                with a suitable address (e.g., one that allows reachability to next
                hop device(s)) therefore the host must be configured with valid addresses
                or configured to for automatic address assignment from a platform
                network.
              items:
                properties:
                  gateway:
                    description: Gateway defines the next hop gateway IP address.
                    type: string
                  interface:
                    description: Interface is a reference to the interface name against
                      which to configure the route.
                    maxLength: 255
                    pattern: ^[a-zA-Z0-9\-_\.]+$
                    type: string
                  metric:
                    description: Metric defines the route preference metric for this
                      route.
                    format: int64
                    maximum: 255
                    minimum: 1
                    type: integer
                  prefix:
                    description: Prefix defines the destination network address prefix
                      length.
                    format: int64
                    maximum: 128
                    minimum: 0
                    type: integer
                  subnet:
                    description: Subnet defines the destination network address subnet.
                    type: string
                required:
                - interface
                - subnet
                - prefix
                - gateway
                type: object
              type: array
            storage:
              description: Storage defines the storage attributes for the host
              properties:
                filesystems:
                  description: FileSystems defines the list of file systems to be
                    defined on the host.
                  items:
                    properties:
                      name:
                        description: Name defines the system defined name of the filesystem
                          resource.  Each filesystem name may only be applicable to
                          a subset of host personalities. Refer to StarlingX documentation
                          for more information.
                        enum:
                        - backup
                        - docker
                        - scratch
                        - kubelet
                        type: string
                      size:
                        format: int64
                        minimum: 1
                        type: integer
                    required:
                    - name
                    - size
                    type: object
                  type: array
                monitor:
                  description: Monitor defines whether a Ceph storage monitor should
                    be enabled on a node.
                  properties:
                    size:
                      description: Size represents the storage allocated to the monitor
                        in gibibytes
                      format: int64
                      maximum: 40
                      minimum: 20
                      type: integer
                  type: object
                osds:
                  description: OSDs defines the list of OSD devices to be created
                    on the host.  This is only applicable to storage related nodes.
                  items:
                    properties:
                      cluster:
                        description: ClusterName defines the storage cluster to which
                          the OSD device should be assigned.  By default this is the
                          "ceph_cluster".
                        maxLength: 255
                        type: string
                      function:
                        description: Function defines the function to be assigned
                          to the OSD device.
                        enum:
                        - osd
                        - journal
                        type: string
                      journal:
                        description: Journal defines another OSD device to be used
                          as the journal for this OSD device.
                        properties:
                          location:
                            description: "Location defines\tthe OSD device path to
                              be used as the Journal OSD for this logical device."
                            maxLength: 255
                            type: string
                          size:
                            description: Size defines the size of the OSD journal
                              in gibibytes.
                            format: int64
                            minimum: 1
                            type: integer
                        required:
                        - location
                        - size
                        type: object
                      path:
                        description: Path defines the disk device path to use as backing
                          for the OSD device.
                        maxLength: 4095
                        pattern: ^/dev/.+$
                        type: string
                    required:
                    - function
                    - path
                    type: object
                  type: array
                volumeGroups:
                  description: VolumeGroups defines the list of volume groups to be
                    created on the host.
                  items:
                    properties:
                      concurrentDiskOperations:
                        description: ConcurrentDiskOperations defines the number of
                          concurrent disk operations permitted.
                        format: int64
                        minimum: 1
                        type: integer
                      lvmType:
                        description: LVMType defines the provisioning type for volumes
                          defines with 'Type' set to 'lvm'.
                        enum:
                        - thin
                        - thick
                        type: string
                      name:
                        description: SystemName defines the name of the logical volume
                          group
                        maxLength: 255
                        pattern: ^[a-zA-Z0-9\-_]+$
                        type: string
                      physicalVolumes:
                        description: PhysicalVolumes defines the list of volumes to
                          be created on the host.
                        items:
                          properties:
                            path:
                              description: Path defines the device path backing the
                                physical volume.  If 'Type' is set as disk then this
                                attribute refers to the absolute path of a disk device.  If
                                'Type' is set as partition then it refers to the device
                                path of the disk onto which this partition will be
                                created.
                              maxLength: 255
                              type: string
                            size:
                              description: Size defines the size of the disk partition
                                in gibibytes.  This should be omitted if the path
                                refers to a disk.
                              format: int64
                              minimum: 1
                              type: integer
                            type:
                              description: Type defines the type of physical volume.
                              enum:
                              - disk
                              - partition
                              type: string
                          required:
                          - type
                          - path
                          type: object
                        type: array
                    required:
                    - name
                    - physicalVolumes
                    type: object
                  type: array
              type: object
            subfunctions:
              description: SubFunctionList defines the set of subfunctions to be provisioned
                on the node at time of initial provisioning.
              items:
                enum:
                - controller
                - worker
                - storage
                - lowlatency
                type: string
              type: array
          type: object
  version: v1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
